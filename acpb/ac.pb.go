// Code generated by protoc-gen-go.
// source: ac.proto
// DO NOT EDIT!

/*
Package acpb is a generated protocol buffer package.

It is generated from these files:
	ac.proto

It has these top-level messages:
	AcPublicKeyMessageRequest
	AcPublicKey
	AcPublicKeyMessageResponse
	AcKeyExchangeMessageRequest
	AcKeyExchangeMessageResponse
	AcCipherTextMessageRequest
	AcCipherTextMessageResponse
	AcControlMessageRequest
	AcControlMessageResponse
	ArseneCryptoMessage
*/
package acpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AcPublicKeyMessageRequestAcPKReqMsgType int32

const (
	AcPublicKeyMessageRequest_PK_GEN  AcPublicKeyMessageRequestAcPKReqMsgType = 10
	AcPublicKeyMessageRequest_PK_ADD  AcPublicKeyMessageRequestAcPKReqMsgType = 11
	AcPublicKeyMessageRequest_PK_LIST AcPublicKeyMessageRequestAcPKReqMsgType = 12
	AcPublicKeyMessageRequest_PK_DEL  AcPublicKeyMessageRequestAcPKReqMsgType = 13
)

var AcPublicKeyMessageRequestAcPKReqMsgType_name = map[int32]string{
	10: "PK_GEN",
	11: "PK_ADD",
	12: "PK_LIST",
	13: "PK_DEL",
}
var AcPublicKeyMessageRequestAcPKReqMsgType_value = map[string]int32{
	"PK_GEN":  10,
	"PK_ADD":  11,
	"PK_LIST": 12,
	"PK_DEL":  13,
}

func (x AcPublicKeyMessageRequestAcPKReqMsgType) Enum() *AcPublicKeyMessageRequestAcPKReqMsgType {
	p := new(AcPublicKeyMessageRequestAcPKReqMsgType)
	*p = x
	return p
}
func (x AcPublicKeyMessageRequestAcPKReqMsgType) String() string {
	return proto.EnumName(AcPublicKeyMessageRequestAcPKReqMsgType_name, int32(x))
}
func (x *AcPublicKeyMessageRequestAcPKReqMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcPublicKeyMessageRequestAcPKReqMsgType_value, data, "AcPublicKeyMessageRequestAcPKReqMsgType")
	if err != nil {
		return err
	}
	*x = AcPublicKeyMessageRequestAcPKReqMsgType(value)
	return nil
}
func (AcPublicKeyMessageRequestAcPKReqMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type AcPublicKeyMessageResponseAcPKRespMsgType int32

const (
	AcPublicKeyMessageResponse_PKR_GEN  AcPublicKeyMessageResponseAcPKRespMsgType = 0
	AcPublicKeyMessageResponse_PKR_ADD  AcPublicKeyMessageResponseAcPKRespMsgType = 1
	AcPublicKeyMessageResponse_PKR_LIST AcPublicKeyMessageResponseAcPKRespMsgType = 2
	AcPublicKeyMessageResponse_PKR_DEL  AcPublicKeyMessageResponseAcPKRespMsgType = 3
	AcPublicKeyMessageResponse_PKR_ERR  AcPublicKeyMessageResponseAcPKRespMsgType = 4
)

var AcPublicKeyMessageResponseAcPKRespMsgType_name = map[int32]string{
	0: "PKR_GEN",
	1: "PKR_ADD",
	2: "PKR_LIST",
	3: "PKR_DEL",
	4: "PKR_ERR",
}
var AcPublicKeyMessageResponseAcPKRespMsgType_value = map[string]int32{
	"PKR_GEN":  0,
	"PKR_ADD":  1,
	"PKR_LIST": 2,
	"PKR_DEL":  3,
	"PKR_ERR":  4,
}

func (x AcPublicKeyMessageResponseAcPKRespMsgType) Enum() *AcPublicKeyMessageResponseAcPKRespMsgType {
	p := new(AcPublicKeyMessageResponseAcPKRespMsgType)
	*p = x
	return p
}
func (x AcPublicKeyMessageResponseAcPKRespMsgType) String() string {
	return proto.EnumName(AcPublicKeyMessageResponseAcPKRespMsgType_name, int32(x))
}
func (x *AcPublicKeyMessageResponseAcPKRespMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcPublicKeyMessageResponseAcPKRespMsgType_value, data, "AcPublicKeyMessageResponseAcPKRespMsgType")
	if err != nil {
		return err
	}
	*x = AcPublicKeyMessageResponseAcPKRespMsgType(value)
	return nil
}
func (AcPublicKeyMessageResponseAcPKRespMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type AcKeyExchangeMessageRequestAcKXReqMsgType int32

const (
	AcKeyExchangeMessageRequest_KX_PACK   AcKeyExchangeMessageRequestAcKXReqMsgType = 20
	AcKeyExchangeMessageRequest_KX_UNPACK AcKeyExchangeMessageRequestAcKXReqMsgType = 21
)

var AcKeyExchangeMessageRequestAcKXReqMsgType_name = map[int32]string{
	20: "KX_PACK",
	21: "KX_UNPACK",
}
var AcKeyExchangeMessageRequestAcKXReqMsgType_value = map[string]int32{
	"KX_PACK":   20,
	"KX_UNPACK": 21,
}

func (x AcKeyExchangeMessageRequestAcKXReqMsgType) Enum() *AcKeyExchangeMessageRequestAcKXReqMsgType {
	p := new(AcKeyExchangeMessageRequestAcKXReqMsgType)
	*p = x
	return p
}
func (x AcKeyExchangeMessageRequestAcKXReqMsgType) String() string {
	return proto.EnumName(AcKeyExchangeMessageRequestAcKXReqMsgType_name, int32(x))
}
func (x *AcKeyExchangeMessageRequestAcKXReqMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcKeyExchangeMessageRequestAcKXReqMsgType_value, data, "AcKeyExchangeMessageRequestAcKXReqMsgType")
	if err != nil {
		return err
	}
	*x = AcKeyExchangeMessageRequestAcKXReqMsgType(value)
	return nil
}
func (AcKeyExchangeMessageRequestAcKXReqMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type AcKeyExchangeMessageResponseAcKXRespMsgType int32

const (
	AcKeyExchangeMessageResponse_KXR_PACK   AcKeyExchangeMessageResponseAcKXRespMsgType = 22
	AcKeyExchangeMessageResponse_KXR_UNPACK AcKeyExchangeMessageResponseAcKXRespMsgType = 23
	AcKeyExchangeMessageResponse_KXR_ERR    AcKeyExchangeMessageResponseAcKXRespMsgType = 24
)

var AcKeyExchangeMessageResponseAcKXRespMsgType_name = map[int32]string{
	22: "KXR_PACK",
	23: "KXR_UNPACK",
	24: "KXR_ERR",
}
var AcKeyExchangeMessageResponseAcKXRespMsgType_value = map[string]int32{
	"KXR_PACK":   22,
	"KXR_UNPACK": 23,
	"KXR_ERR":    24,
}

func (x AcKeyExchangeMessageResponseAcKXRespMsgType) Enum() *AcKeyExchangeMessageResponseAcKXRespMsgType {
	p := new(AcKeyExchangeMessageResponseAcKXRespMsgType)
	*p = x
	return p
}
func (x AcKeyExchangeMessageResponseAcKXRespMsgType) String() string {
	return proto.EnumName(AcKeyExchangeMessageResponseAcKXRespMsgType_name, int32(x))
}
func (x *AcKeyExchangeMessageResponseAcKXRespMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcKeyExchangeMessageResponseAcKXRespMsgType_value, data, "AcKeyExchangeMessageResponseAcKXRespMsgType")
	if err != nil {
		return err
	}
	*x = AcKeyExchangeMessageResponseAcKXRespMsgType(value)
	return nil
}
func (AcKeyExchangeMessageResponseAcKXRespMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

type AcCipherTextMessageRequestAcCTReqMsgType int32

const (
	AcCipherTextMessageRequest_CT_SEAL AcCipherTextMessageRequestAcCTReqMsgType = 30
	AcCipherTextMessageRequest_CT_OPEN AcCipherTextMessageRequestAcCTReqMsgType = 31
	AcCipherTextMessageRequest_CT_ADD  AcCipherTextMessageRequestAcCTReqMsgType = 32
)

var AcCipherTextMessageRequestAcCTReqMsgType_name = map[int32]string{
	30: "CT_SEAL",
	31: "CT_OPEN",
	32: "CT_ADD",
}
var AcCipherTextMessageRequestAcCTReqMsgType_value = map[string]int32{
	"CT_SEAL": 30,
	"CT_OPEN": 31,
	"CT_ADD":  32,
}

func (x AcCipherTextMessageRequestAcCTReqMsgType) Enum() *AcCipherTextMessageRequestAcCTReqMsgType {
	p := new(AcCipherTextMessageRequestAcCTReqMsgType)
	*p = x
	return p
}
func (x AcCipherTextMessageRequestAcCTReqMsgType) String() string {
	return proto.EnumName(AcCipherTextMessageRequestAcCTReqMsgType_name, int32(x))
}
func (x *AcCipherTextMessageRequestAcCTReqMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcCipherTextMessageRequestAcCTReqMsgType_value, data, "AcCipherTextMessageRequestAcCTReqMsgType")
	if err != nil {
		return err
	}
	*x = AcCipherTextMessageRequestAcCTReqMsgType(value)
	return nil
}
func (AcCipherTextMessageRequestAcCTReqMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

type AcCipherTextMessageResponseAcCTRespMsgType int32

const (
	AcCipherTextMessageResponse_CTR_SEAL AcCipherTextMessageResponseAcCTRespMsgType = 32
	AcCipherTextMessageResponse_CTR_OPEN AcCipherTextMessageResponseAcCTRespMsgType = 33
	AcCipherTextMessageResponse_CTR_ADD  AcCipherTextMessageResponseAcCTRespMsgType = 34
	AcCipherTextMessageResponse_CTR_ERR  AcCipherTextMessageResponseAcCTRespMsgType = 35
)

var AcCipherTextMessageResponseAcCTRespMsgType_name = map[int32]string{
	32: "CTR_SEAL",
	33: "CTR_OPEN",
	34: "CTR_ADD",
	35: "CTR_ERR",
}
var AcCipherTextMessageResponseAcCTRespMsgType_value = map[string]int32{
	"CTR_SEAL": 32,
	"CTR_OPEN": 33,
	"CTR_ADD":  34,
	"CTR_ERR":  35,
}

func (x AcCipherTextMessageResponseAcCTRespMsgType) Enum() *AcCipherTextMessageResponseAcCTRespMsgType {
	p := new(AcCipherTextMessageResponseAcCTRespMsgType)
	*p = x
	return p
}
func (x AcCipherTextMessageResponseAcCTRespMsgType) String() string {
	return proto.EnumName(AcCipherTextMessageResponseAcCTRespMsgType_name, int32(x))
}
func (x *AcCipherTextMessageResponseAcCTRespMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcCipherTextMessageResponseAcCTRespMsgType_value, data, "AcCipherTextMessageResponseAcCTRespMsgType")
	if err != nil {
		return err
	}
	*x = AcCipherTextMessageResponseAcCTRespMsgType(value)
	return nil
}
func (AcCipherTextMessageResponseAcCTRespMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 0}
}

type AcControlMessageRequestAcCTLReqMsgType int32

const (
	AcControlMessageRequest_CTL_PING    AcControlMessageRequestAcCTLReqMsgType = 40
	AcControlMessageRequest_CTL_SAVECTX AcControlMessageRequestAcCTLReqMsgType = 41
	AcControlMessageRequest_CTL_LOADCTX AcControlMessageRequestAcCTLReqMsgType = 42
	AcControlMessageRequest_CTL_VERSION AcControlMessageRequestAcCTLReqMsgType = 43
)

var AcControlMessageRequestAcCTLReqMsgType_name = map[int32]string{
	40: "CTL_PING",
	41: "CTL_SAVECTX",
	42: "CTL_LOADCTX",
	43: "CTL_VERSION",
}
var AcControlMessageRequestAcCTLReqMsgType_value = map[string]int32{
	"CTL_PING":    40,
	"CTL_SAVECTX": 41,
	"CTL_LOADCTX": 42,
	"CTL_VERSION": 43,
}

func (x AcControlMessageRequestAcCTLReqMsgType) Enum() *AcControlMessageRequestAcCTLReqMsgType {
	p := new(AcControlMessageRequestAcCTLReqMsgType)
	*p = x
	return p
}
func (x AcControlMessageRequestAcCTLReqMsgType) String() string {
	return proto.EnumName(AcControlMessageRequestAcCTLReqMsgType_name, int32(x))
}
func (x *AcControlMessageRequestAcCTLReqMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcControlMessageRequestAcCTLReqMsgType_value, data, "AcControlMessageRequestAcCTLReqMsgType")
	if err != nil {
		return err
	}
	*x = AcControlMessageRequestAcCTLReqMsgType(value)
	return nil
}
func (AcControlMessageRequestAcCTLReqMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

type AcControlMessageResponseAcCTLRRespMsgType int32

const (
	AcControlMessageResponse_CTLR_PONG    AcControlMessageResponseAcCTLRRespMsgType = 50
	AcControlMessageResponse_CTLR_SAVECTX AcControlMessageResponseAcCTLRRespMsgType = 51
	AcControlMessageResponse_CTLR_LOADCTX AcControlMessageResponseAcCTLRRespMsgType = 52
	AcControlMessageResponse_CTLR_QUIT    AcControlMessageResponseAcCTLRRespMsgType = 53
)

var AcControlMessageResponseAcCTLRRespMsgType_name = map[int32]string{
	50: "CTLR_PONG",
	51: "CTLR_SAVECTX",
	52: "CTLR_LOADCTX",
	53: "CTLR_QUIT",
}
var AcControlMessageResponseAcCTLRRespMsgType_value = map[string]int32{
	"CTLR_PONG":    50,
	"CTLR_SAVECTX": 51,
	"CTLR_LOADCTX": 52,
	"CTLR_QUIT":    53,
}

func (x AcControlMessageResponseAcCTLRRespMsgType) Enum() *AcControlMessageResponseAcCTLRRespMsgType {
	p := new(AcControlMessageResponseAcCTLRRespMsgType)
	*p = x
	return p
}
func (x AcControlMessageResponseAcCTLRRespMsgType) String() string {
	return proto.EnumName(AcControlMessageResponseAcCTLRRespMsgType_name, int32(x))
}
func (x *AcControlMessageResponseAcCTLRRespMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcControlMessageResponseAcCTLRRespMsgType_value, data, "AcControlMessageResponseAcCTLRRespMsgType")
	if err != nil {
		return err
	}
	*x = AcControlMessageResponseAcCTLRRespMsgType(value)
	return nil
}
func (AcControlMessageResponseAcCTLRRespMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

type ArseneCryptoMessageAcMessageType int32

const (
	ArseneCryptoMessage_AC_PK     ArseneCryptoMessageAcMessageType = 20
	ArseneCryptoMessage_AC_KEX    ArseneCryptoMessageAcMessageType = 21
	ArseneCryptoMessage_AC_CRYPTO ArseneCryptoMessageAcMessageType = 22
	ArseneCryptoMessage_AC_CTL    ArseneCryptoMessageAcMessageType = 23
	ArseneCryptoMessage_AC_QUIT   ArseneCryptoMessageAcMessageType = 24
	ArseneCryptoMessage_AC_ERROR  ArseneCryptoMessageAcMessageType = 25
)

var ArseneCryptoMessageAcMessageType_name = map[int32]string{
	20: "AC_PK",
	21: "AC_KEX",
	22: "AC_CRYPTO",
	23: "AC_CTL",
	24: "AC_QUIT",
	25: "AC_ERROR",
}
var ArseneCryptoMessageAcMessageType_value = map[string]int32{
	"AC_PK":     20,
	"AC_KEX":    21,
	"AC_CRYPTO": 22,
	"AC_CTL":    23,
	"AC_QUIT":   24,
	"AC_ERROR":  25,
}

func (x ArseneCryptoMessageAcMessageType) Enum() *ArseneCryptoMessageAcMessageType {
	p := new(ArseneCryptoMessageAcMessageType)
	*p = x
	return p
}
func (x ArseneCryptoMessageAcMessageType) String() string {
	return proto.EnumName(ArseneCryptoMessageAcMessageType_name, int32(x))
}
func (x *ArseneCryptoMessageAcMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArseneCryptoMessageAcMessageType_value, data, "ArseneCryptoMessageAcMessageType")
	if err != nil {
		return err
	}
	*x = ArseneCryptoMessageAcMessageType(value)
	return nil
}
func (ArseneCryptoMessageAcMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 0}
}

// PUBLIC KEY // EC25519 DH
// This message handle public key requests:
// PK_GEN: generate an ephemeral public key
// PK_ADD: add an externally received ephemeral public key
// PK_LIST: list currently known ephemeral public key(s)
// PK_DEL: delete a currently stored ephemeral public key
type AcPublicKeyMessageRequest struct {
	Type             *AcPublicKeyMessageRequestAcPKReqMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcPublicKeyMessageRequestAcPKReqMsgType" json:"type,omitempty"`
	Nick             *string                                  `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Host             *string                                  `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Server           *string                                  `protobuf:"bytes,5,req,name=server" json:"server,omitempty"`
	Blob             []byte                                   `protobuf:"bytes,3,opt,name=blob" json:"blob,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *AcPublicKeyMessageRequest) Reset()                    { *m = AcPublicKeyMessageRequest{} }
func (m *AcPublicKeyMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*AcPublicKeyMessageRequest) ProtoMessage()               {}
func (*AcPublicKeyMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AcPublicKeyMessageRequest) GetType() AcPublicKeyMessageRequestAcPKReqMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcPublicKeyMessageRequest_PK_GEN
}

func (m *AcPublicKeyMessageRequest) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *AcPublicKeyMessageRequest) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *AcPublicKeyMessageRequest) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *AcPublicKeyMessageRequest) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type AcPublicKey struct {
	Nick             *string `protobuf:"bytes,1,req,name=nick" json:"nick,omitempty"`
	Fp               []byte  `protobuf:"bytes,2,req,name=fp" json:"fp,omitempty"`
	Timestamp        *int64  `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	Pubkey           *string `protobuf:"bytes,4,req,name=pubkey" json:"pubkey,omitempty"`
	Haspriv          *bool   `protobuf:"varint,5,req,name=haspriv" json:"haspriv,omitempty"`
	Host             *string `protobuf:"bytes,6,opt,name=host" json:"host,omitempty"`
	Server           *string `protobuf:"bytes,7,opt,name=server" json:"server,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AcPublicKey) Reset()                    { *m = AcPublicKey{} }
func (m *AcPublicKey) String() string            { return proto.CompactTextString(m) }
func (*AcPublicKey) ProtoMessage()               {}
func (*AcPublicKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AcPublicKey) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *AcPublicKey) GetFp() []byte {
	if m != nil {
		return m.Fp
	}
	return nil
}

func (m *AcPublicKey) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *AcPublicKey) GetPubkey() string {
	if m != nil && m.Pubkey != nil {
		return *m.Pubkey
	}
	return ""
}

func (m *AcPublicKey) GetHaspriv() bool {
	if m != nil && m.Haspriv != nil {
		return *m.Haspriv
	}
	return false
}

func (m *AcPublicKey) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *AcPublicKey) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

type AcPublicKeyMessageResponse struct {
	Type             *AcPublicKeyMessageResponseAcPKRespMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcPublicKeyMessageResponseAcPKRespMsgType" json:"type,omitempty"`
	Bada             *bool                                      `protobuf:"varint,2,req,name=bada" json:"bada,omitempty"`
	ErrorCode        *int32                                     `protobuf:"zigzag32,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Blob             []byte                                     `protobuf:"bytes,4,opt,name=blob" json:"blob,omitempty"`
	PublicKeys       []*AcPublicKey                             `protobuf:"bytes,5,rep,name=public_keys,json=publicKeys" json:"public_keys,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *AcPublicKeyMessageResponse) Reset()                    { *m = AcPublicKeyMessageResponse{} }
func (m *AcPublicKeyMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*AcPublicKeyMessageResponse) ProtoMessage()               {}
func (*AcPublicKeyMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AcPublicKeyMessageResponse) GetType() AcPublicKeyMessageResponseAcPKRespMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcPublicKeyMessageResponse_PKR_GEN
}

func (m *AcPublicKeyMessageResponse) GetBada() bool {
	if m != nil && m.Bada != nil {
		return *m.Bada
	}
	return false
}

func (m *AcPublicKeyMessageResponse) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *AcPublicKeyMessageResponse) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *AcPublicKeyMessageResponse) GetPublicKeys() []*AcPublicKey {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

//
//
//
// Key EXchange messages
//
//
//
type AcKeyExchangeMessageRequest struct {
	Type             *AcKeyExchangeMessageRequestAcKXReqMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcKeyExchangeMessageRequestAcKXReqMsgType" json:"type,omitempty"`
	Mynick           *string                                    `protobuf:"bytes,2,req,name=mynick" json:"mynick,omitempty"`
	Peernick         *string                                    `protobuf:"bytes,3,req,name=peernick" json:"peernick,omitempty"`
	Channel          *string                                    `protobuf:"bytes,4,req,name=channel" json:"channel,omitempty"`
	Server           *string                                    `protobuf:"bytes,5,req,name=server" json:"server,omitempty"`
	Blob             []byte                                     `protobuf:"bytes,6,opt,name=blob" json:"blob,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *AcKeyExchangeMessageRequest) Reset()                    { *m = AcKeyExchangeMessageRequest{} }
func (m *AcKeyExchangeMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*AcKeyExchangeMessageRequest) ProtoMessage()               {}
func (*AcKeyExchangeMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AcKeyExchangeMessageRequest) GetType() AcKeyExchangeMessageRequestAcKXReqMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcKeyExchangeMessageRequest_KX_PACK
}

func (m *AcKeyExchangeMessageRequest) GetMynick() string {
	if m != nil && m.Mynick != nil {
		return *m.Mynick
	}
	return ""
}

func (m *AcKeyExchangeMessageRequest) GetPeernick() string {
	if m != nil && m.Peernick != nil {
		return *m.Peernick
	}
	return ""
}

func (m *AcKeyExchangeMessageRequest) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *AcKeyExchangeMessageRequest) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *AcKeyExchangeMessageRequest) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type AcKeyExchangeMessageResponse struct {
	Type             *AcKeyExchangeMessageResponseAcKXRespMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcKeyExchangeMessageResponseAcKXRespMsgType" json:"type,omitempty"`
	Bada             *bool                                        `protobuf:"varint,2,req,name=bada" json:"bada,omitempty"`
	ErrorCode        *int32                                       `protobuf:"zigzag32,6,req,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Blob             []byte                                       `protobuf:"bytes,5,opt,name=blob" json:"blob,omitempty"`
	Nonce            *uint32                                      `protobuf:"varint,7,opt,name=nonce" json:"nonce,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *AcKeyExchangeMessageResponse) Reset()                    { *m = AcKeyExchangeMessageResponse{} }
func (m *AcKeyExchangeMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*AcKeyExchangeMessageResponse) ProtoMessage()               {}
func (*AcKeyExchangeMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AcKeyExchangeMessageResponse) GetType() AcKeyExchangeMessageResponseAcKXRespMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcKeyExchangeMessageResponse_KXR_PACK
}

func (m *AcKeyExchangeMessageResponse) GetBada() bool {
	if m != nil && m.Bada != nil {
		return *m.Bada
	}
	return false
}

func (m *AcKeyExchangeMessageResponse) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *AcKeyExchangeMessageResponse) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *AcKeyExchangeMessageResponse) GetNonce() uint32 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

//
//
//
// Crypto Message
//
//
//
type AcCipherTextMessageRequest struct {
	Type             *AcCipherTextMessageRequestAcCTReqMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcCipherTextMessageRequestAcCTReqMsgType" json:"type,omitempty"`
	Nick             *string                                   `protobuf:"bytes,2,req,name=nick" json:"nick,omitempty"`
	Channel          *string                                   `protobuf:"bytes,3,req,name=channel" json:"channel,omitempty"`
	Server           *string                                   `protobuf:"bytes,4,req,name=server" json:"server,omitempty"`
	Blob             []byte                                    `protobuf:"bytes,5,req,name=blob" json:"blob,omitempty"`
	Opt              *string                                   `protobuf:"bytes,6,opt,name=opt" json:"opt,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *AcCipherTextMessageRequest) Reset()                    { *m = AcCipherTextMessageRequest{} }
func (m *AcCipherTextMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*AcCipherTextMessageRequest) ProtoMessage()               {}
func (*AcCipherTextMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AcCipherTextMessageRequest) GetType() AcCipherTextMessageRequestAcCTReqMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcCipherTextMessageRequest_CT_SEAL
}

func (m *AcCipherTextMessageRequest) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *AcCipherTextMessageRequest) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *AcCipherTextMessageRequest) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *AcCipherTextMessageRequest) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *AcCipherTextMessageRequest) GetOpt() string {
	if m != nil && m.Opt != nil {
		return *m.Opt
	}
	return ""
}

type AcCipherTextMessageResponse struct {
	Type             *AcCipherTextMessageResponseAcCTRespMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcCipherTextMessageResponseAcCTRespMsgType" json:"type,omitempty"`
	Bada             *bool                                       `protobuf:"varint,2,req,name=bada" json:"bada,omitempty"`
	Blob             [][]byte                                    `protobuf:"bytes,5,rep,name=blob" json:"blob,omitempty"`
	ErrorCode        *int32                                      `protobuf:"zigzag32,6,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Nonce            *uint32                                     `protobuf:"varint,7,opt,name=nonce" json:"nonce,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *AcCipherTextMessageResponse) Reset()                    { *m = AcCipherTextMessageResponse{} }
func (m *AcCipherTextMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*AcCipherTextMessageResponse) ProtoMessage()               {}
func (*AcCipherTextMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AcCipherTextMessageResponse) GetType() AcCipherTextMessageResponseAcCTRespMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcCipherTextMessageResponse_CTR_SEAL
}

func (m *AcCipherTextMessageResponse) GetBada() bool {
	if m != nil && m.Bada != nil {
		return *m.Bada
	}
	return false
}

func (m *AcCipherTextMessageResponse) GetBlob() [][]byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *AcCipherTextMessageResponse) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *AcCipherTextMessageResponse) GetNonce() uint32 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

//
//
//
// Control Message
//
//
//
type AcControlMessageRequest struct {
	Type             *AcControlMessageRequestAcCTLReqMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcControlMessageRequestAcCTLReqMsgType" json:"type,omitempty"`
	Password         *string                                 `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Timestamp        *int64                                  `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *AcControlMessageRequest) Reset()                    { *m = AcControlMessageRequest{} }
func (m *AcControlMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*AcControlMessageRequest) ProtoMessage()               {}
func (*AcControlMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AcControlMessageRequest) GetType() AcControlMessageRequestAcCTLReqMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcControlMessageRequest_CTL_PING
}

func (m *AcControlMessageRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *AcControlMessageRequest) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type AcControlMessageResponse struct {
	Type             *AcControlMessageResponseAcCTLRRespMsgType `protobuf:"varint,1,req,name=type,enum=acpb.AcControlMessageResponseAcCTLRRespMsgType" json:"type,omitempty"`
	Bada             *bool                                      `protobuf:"varint,2,req,name=bada" json:"bada,omitempty"`
	ErrorCode        *int32                                     `protobuf:"zigzag32,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Timestamp        *int64                                     `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *AcControlMessageResponse) Reset()                    { *m = AcControlMessageResponse{} }
func (m *AcControlMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*AcControlMessageResponse) ProtoMessage()               {}
func (*AcControlMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AcControlMessageResponse) GetType() AcControlMessageResponseAcCTLRRespMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AcControlMessageResponse_CTLR_PONG
}

func (m *AcControlMessageResponse) GetBada() bool {
	if m != nil && m.Bada != nil {
		return *m.Bada
	}
	return false
}

func (m *AcControlMessageResponse) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *AcControlMessageResponse) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

//
//
// The enveloppe Type
//
//
type ArseneCryptoMessage struct {
	Type             *ArseneCryptoMessageAcMessageType `protobuf:"varint,40,req,name=type,enum=acpb.ArseneCryptoMessageAcMessageType" json:"type,omitempty"`
	Blob             []byte                            `protobuf:"bytes,41,req,name=blob" json:"blob,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *ArseneCryptoMessage) Reset()                    { *m = ArseneCryptoMessage{} }
func (m *ArseneCryptoMessage) String() string            { return proto.CompactTextString(m) }
func (*ArseneCryptoMessage) ProtoMessage()               {}
func (*ArseneCryptoMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ArseneCryptoMessage) GetType() ArseneCryptoMessageAcMessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ArseneCryptoMessage_AC_PK
}

func (m *ArseneCryptoMessage) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func init() {
	proto.RegisterType((*AcPublicKeyMessageRequest)(nil), "acpb.acPublicKeyMessageRequest")
	proto.RegisterType((*AcPublicKey)(nil), "acpb.acPublicKey")
	proto.RegisterType((*AcPublicKeyMessageResponse)(nil), "acpb.acPublicKeyMessageResponse")
	proto.RegisterType((*AcKeyExchangeMessageRequest)(nil), "acpb.acKeyExchangeMessageRequest")
	proto.RegisterType((*AcKeyExchangeMessageResponse)(nil), "acpb.acKeyExchangeMessageResponse")
	proto.RegisterType((*AcCipherTextMessageRequest)(nil), "acpb.acCipherTextMessageRequest")
	proto.RegisterType((*AcCipherTextMessageResponse)(nil), "acpb.acCipherTextMessageResponse")
	proto.RegisterType((*AcControlMessageRequest)(nil), "acpb.acControlMessageRequest")
	proto.RegisterType((*AcControlMessageResponse)(nil), "acpb.acControlMessageResponse")
	proto.RegisterType((*ArseneCryptoMessage)(nil), "acpb.ArseneCryptoMessage")
	proto.RegisterEnum("acpb.AcPublicKeyMessageRequestAcPKReqMsgType", AcPublicKeyMessageRequestAcPKReqMsgType_name, AcPublicKeyMessageRequestAcPKReqMsgType_value)
	proto.RegisterEnum("acpb.AcPublicKeyMessageResponseAcPKRespMsgType", AcPublicKeyMessageResponseAcPKRespMsgType_name, AcPublicKeyMessageResponseAcPKRespMsgType_value)
	proto.RegisterEnum("acpb.AcKeyExchangeMessageRequestAcKXReqMsgType", AcKeyExchangeMessageRequestAcKXReqMsgType_name, AcKeyExchangeMessageRequestAcKXReqMsgType_value)
	proto.RegisterEnum("acpb.AcKeyExchangeMessageResponseAcKXRespMsgType", AcKeyExchangeMessageResponseAcKXRespMsgType_name, AcKeyExchangeMessageResponseAcKXRespMsgType_value)
	proto.RegisterEnum("acpb.AcCipherTextMessageRequestAcCTReqMsgType", AcCipherTextMessageRequestAcCTReqMsgType_name, AcCipherTextMessageRequestAcCTReqMsgType_value)
	proto.RegisterEnum("acpb.AcCipherTextMessageResponseAcCTRespMsgType", AcCipherTextMessageResponseAcCTRespMsgType_name, AcCipherTextMessageResponseAcCTRespMsgType_value)
	proto.RegisterEnum("acpb.AcControlMessageRequestAcCTLReqMsgType", AcControlMessageRequestAcCTLReqMsgType_name, AcControlMessageRequestAcCTLReqMsgType_value)
	proto.RegisterEnum("acpb.AcControlMessageResponseAcCTLRRespMsgType", AcControlMessageResponseAcCTLRRespMsgType_name, AcControlMessageResponseAcCTLRRespMsgType_value)
	proto.RegisterEnum("acpb.ArseneCryptoMessageAcMessageType", ArseneCryptoMessageAcMessageType_name, ArseneCryptoMessageAcMessageType_value)
}

func init() { proto.RegisterFile("ac.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 995 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0x8e, 0x24, 0xdb, 0xb1, 0x8f, 0x9d, 0x54, 0x59, 0xda, 0x54, 0x2d, 0x05, 0x84, 0xb8, 0xc0,
	0xe5, 0xc7, 0x80, 0xf9, 0xb9, 0x81, 0x1b, 0x55, 0x16, 0x21, 0x63, 0xd7, 0x36, 0x6b, 0xa5, 0x63,
	0x66, 0x98, 0xd1, 0xc8, 0xca, 0x36, 0xf1, 0x24, 0xb1, 0x54, 0xc9, 0x29, 0xf5, 0x1d, 0x5c, 0x30,
	0xd3, 0x81, 0x1b, 0x5e, 0x84, 0x1b, 0x9e, 0x81, 0xa7, 0xe1, 0x01, 0xb8, 0x66, 0xce, 0xae, 0x24,
	0x5b, 0xb6, 0x1c, 0x60, 0xa6, 0x77, 0xfb, 0x9d, 0x5d, 0x69, 0xcf, 0xf7, 0x9d, 0xef, 0x9c, 0x85,
	0xaa, 0xe7, 0xb7, 0xc2, 0x28, 0x98, 0x07, 0xa4, 0xe4, 0xf9, 0xe1, 0xc4, 0xf8, 0x5b, 0x82, 0x7b,
	0x9e, 0x3f, 0xbc, 0x9e, 0x5c, 0x4e, 0xfd, 0x2e, 0x5b, 0x3c, 0x66, 0x71, 0xec, 0x9d, 0x31, 0xca,
	0x9e, 0x5d, 0xb3, 0x78, 0x4e, 0x1e, 0x41, 0x69, 0xbe, 0x08, 0x99, 0x26, 0xe9, 0x72, 0x73, 0xbf,
	0xdd, 0x6a, 0xe1, 0x27, 0xad, 0xad, 0xc7, 0x71, 0xa7, 0x4b, 0xd9, 0xb3, 0xc7, 0xf1, 0x99, 0xb3,
	0x08, 0x19, 0xe5, 0xdf, 0x12, 0x02, 0xa5, 0xd9, 0xd4, 0xbf, 0xd0, 0x64, 0x5d, 0x6a, 0xd6, 0x28,
	0x5f, 0x63, 0xec, 0x3c, 0x88, 0xe7, 0x5a, 0x49, 0xc4, 0x70, 0x4d, 0x0e, 0xa1, 0x12, 0xb3, 0xe8,
	0x39, 0x8b, 0xb4, 0xb2, 0x2e, 0x37, 0x6b, 0x34, 0x41, 0x78, 0x76, 0x72, 0x19, 0x4c, 0x34, 0x45,
	0x97, 0x9a, 0x0d, 0xca, 0xd7, 0x86, 0x09, 0xfb, 0xf9, 0xbb, 0x08, 0x40, 0x65, 0xd8, 0x75, 0x8f,
	0xec, 0xbe, 0x0a, 0xc9, 0xda, 0xec, 0x74, 0xd4, 0x3a, 0xa9, 0xc3, 0xee, 0xb0, 0xeb, 0xf6, 0x8e,
	0x47, 0x8e, 0xda, 0x48, 0x36, 0x3a, 0x76, 0x4f, 0xdd, 0x33, 0x7e, 0x97, 0xa0, 0xbe, 0xc2, 0x24,
	0x4b, 0x53, 0xe2, 0x97, 0x8b, 0x34, 0xf7, 0x41, 0x7e, 0x1a, 0x6a, 0xb2, 0x2e, 0x37, 0x1b, 0x54,
	0x7e, 0x1a, 0x92, 0x07, 0x50, 0x9b, 0x4f, 0xaf, 0x58, 0x3c, 0xf7, 0xae, 0x42, 0x4d, 0xd1, 0xe5,
	0xa6, 0x42, 0x97, 0x01, 0x24, 0x10, 0x5e, 0x4f, 0x2e, 0xd8, 0x42, 0x2b, 0x09, 0x02, 0x02, 0x11,
	0x0d, 0x76, 0xcf, 0xbd, 0x38, 0x8c, 0xa6, 0xcf, 0x39, 0xb3, 0x2a, 0x4d, 0x61, 0x26, 0x43, 0xa5,
	0x50, 0x86, 0x5d, 0x1e, 0x4d, 0x90, 0xf1, 0x87, 0x0c, 0xf7, 0x8b, 0x94, 0x8f, 0xc3, 0x60, 0x16,
	0x33, 0xd2, 0xc9, 0x55, 0xea, 0xe3, 0xed, 0x95, 0x12, 0xe7, 0x93, 0x52, 0xc5, 0xe1, 0x46, 0xad,
	0x26, 0xde, 0xa9, 0xc7, 0x29, 0x57, 0x29, 0x5f, 0x93, 0x37, 0x00, 0x58, 0x14, 0x05, 0x91, 0xeb,
	0x07, 0xa7, 0x8c, 0x57, 0xe1, 0x80, 0xd6, 0x78, 0xc4, 0x0a, 0x4e, 0x59, 0x56, 0x9e, 0xd2, 0xb2,
	0x3c, 0xa4, 0x0d, 0xf5, 0x90, 0x5f, 0xec, 0x5e, 0xb0, 0x45, 0xac, 0x95, 0x75, 0xa5, 0x59, 0x6f,
	0x1f, 0x6c, 0xe4, 0x44, 0x21, 0x4c, 0x97, 0xb1, 0x31, 0x82, 0x5b, 0x6b, 0x39, 0x89, 0xda, 0x51,
	0x5e, 0xd4, 0x9d, 0x14, 0x60, 0x55, 0x25, 0xd2, 0x80, 0x2a, 0x02, 0x5e, 0x56, 0x39, 0xdd, 0xc2,
	0xba, 0x2a, 0x29, 0xb0, 0x29, 0x55, 0x4b, 0xc6, 0xaf, 0x32, 0xbc, 0xee, 0xe1, 0xff, 0xed, 0x17,
	0xfe, 0xb9, 0x37, 0x3b, 0x63, 0x6b, 0xfe, 0xde, 0xa2, 0xda, 0xd6, 0x0f, 0x70, 0x6f, 0xbc, 0xe1,
	0xf0, 0x43, 0xa8, 0x5c, 0x2d, 0x12, 0x8f, 0xf3, 0xc2, 0x0b, 0x44, 0xee, 0x43, 0x35, 0x64, 0x2c,
	0xe2, 0x3b, 0x0a, 0xdf, 0xc9, 0x30, 0x9a, 0x02, 0x2f, 0x98, 0xb1, 0xcb, 0xc4, 0x2d, 0x29, 0xfc,
	0xd7, 0x3e, 0xa8, 0xac, 0xf4, 0xc1, 0x07, 0xd8, 0x07, 0xab, 0x19, 0x21, 0xfd, 0xee, 0xd8, 0x1d,
	0x9a, 0x56, 0x57, 0xbd, 0x4d, 0xf6, 0xa0, 0xd6, 0x1d, 0xbb, 0x27, 0x7d, 0x0e, 0xef, 0x18, 0x3f,
	0xc9, 0xf0, 0xa0, 0x98, 0x5c, 0x62, 0xa2, 0xaf, 0x73, 0x72, 0xb4, 0x6f, 0x92, 0x23, 0xb3, 0x11,
	0xde, 0xfe, 0xff, 0x6d, 0x54, 0xd1, 0xe5, 0x62, 0x1b, 0x95, 0x57, 0x6c, 0x74, 0x1b, 0xca, 0xb3,
	0x60, 0xe6, 0x33, 0xde, 0x09, 0x7b, 0x54, 0x00, 0xe3, 0x2b, 0x34, 0x4a, 0xee, 0x56, 0xb4, 0x43,
	0x77, 0x4c, 0x05, 0xeb, 0x43, 0xb2, 0x0f, 0x80, 0x28, 0xa1, 0x7d, 0x57, 0x48, 0x22, 0x1c, 0xa1,
	0x19, 0x3f, 0xf3, 0x36, 0xb2, 0xa6, 0xe1, 0x39, 0x8b, 0x1c, 0xf6, 0x62, 0xbe, 0x66, 0x08, 0x2b,
	0xa7, 0xc0, 0x47, 0xa9, 0x02, 0xdb, 0xce, 0xe3, 0x96, 0x73, 0xc3, 0xc4, 0x5b, 0x8e, 0x92, 0x95,
	0x7a, 0x2b, 0xdb, 0xea, 0x5d, 0x2a, 0xac, 0x77, 0x99, 0x8f, 0x1f, 0xa1, 0x88, 0x0a, 0x4a, 0x10,
	0xa6, 0xf3, 0x02, 0x97, 0xc6, 0x17, 0xe8, 0x80, 0xd5, 0x1c, 0x90, 0xae, 0xe5, 0xb8, 0x23, 0xdb,
	0xec, 0xa9, 0x6f, 0x26, 0x60, 0x30, 0xb4, 0xfb, 0xea, 0x5b, 0x38, 0xfe, 0x2c, 0x87, 0x77, 0x90,
	0x6e, 0xfc, 0xc2, 0x3b, 0xa3, 0x80, 0x57, 0x62, 0x05, 0x3b, 0x27, 0xc4, 0x27, 0x37, 0x08, 0x91,
	0x39, 0x01, 0xb3, 0xf8, 0x2f, 0x4e, 0x58, 0x12, 0x53, 0x32, 0x62, 0xeb, 0xee, 0x58, 0x1b, 0x32,
	0xc5, 0x4e, 0x38, 0x42, 0x27, 0xe4, 0x6e, 0x45, 0x27, 0x58, 0x0e, 0x15, 0xec, 0xf5, 0x14, 0x71,
	0xfa, 0x6f, 0x0b, 0x2d, 0xc4, 0x04, 0x31, 0x52, 0x80, 0xa6, 0x78, 0xc7, 0xf8, 0x4b, 0x82, 0xbb,
	0x9e, 0x6f, 0x05, 0xb3, 0x79, 0x14, 0x5c, 0xae, 0x39, 0xc2, 0xcc, 0x09, 0xf1, 0x61, 0x26, 0x44,
	0xd1, 0x61, 0x2e, 0x42, 0x6f, 0xc3, 0x0f, 0x38, 0x07, 0xbc, 0x38, 0xfe, 0x21, 0x88, 0x4e, 0x93,
	0x57, 0x30, 0xc3, 0xeb, 0x4f, 0x8a, 0x94, 0x7b, 0x52, 0x0c, 0x2a, 0x18, 0xae, 0xfc, 0x52, 0x70,
	0xea, 0xb9, 0xc3, 0xe3, 0xfe, 0x91, 0xda, 0x24, 0xb7, 0xa0, 0x8e, 0x68, 0x64, 0x3e, 0xb1, 0x2d,
	0x67, 0xac, 0x3e, 0x4c, 0x03, 0xbd, 0x81, 0xd9, 0xc1, 0xc0, 0x7b, 0x69, 0xe0, 0x89, 0x4d, 0x47,
	0xc7, 0x83, 0xbe, 0xfa, 0xbe, 0xf1, 0x52, 0x06, 0x6d, 0x33, 0xff, 0x9b, 0x9f, 0x91, 0xe2, 0xd3,
	0x09, 0xdd, 0x57, 0xf2, 0x8c, 0xe4, 0x74, 0x28, 0xad, 0xeb, 0x70, 0x02, 0x07, 0x1b, 0x77, 0xe1,
	0x74, 0xc3, 0x90, 0x3b, 0x1c, 0xf4, 0x8f, 0xd4, 0x36, 0x51, 0xa1, 0xc1, 0x61, 0xaa, 0xc5, 0xa7,
	0x59, 0x24, 0x15, 0xe3, 0xb3, 0xec, 0x93, 0x6f, 0x4f, 0x8e, 0x1d, 0xf5, 0x73, 0xe3, 0x4f, 0x09,
	0x5e, 0x33, 0xa3, 0x98, 0xcd, 0x98, 0x15, 0x2d, 0xc2, 0x79, 0x90, 0xf0, 0x23, 0x5f, 0x26, 0x2a,
	0x34, 0xb9, 0x0a, 0xef, 0x0a, 0x15, 0x0a, 0x0e, 0xb6, 0x3c, 0x3f, 0x59, 0xad, 0x91, 0x47, 0x7b,
	0x3f, 0x5c, 0xf6, 0xad, 0xf1, 0x3d, 0xec, 0xe5, 0x8e, 0x92, 0x1a, 0x94, 0x4d, 0xcb, 0x1d, 0xe2,
	0x90, 0x06, 0xa8, 0x98, 0x96, 0xdb, 0xb5, 0xc7, 0xea, 0x1d, 0xcc, 0xcf, 0xb4, 0x5c, 0x8b, 0x7e,
	0x37, 0x74, 0x06, 0xea, 0x61, 0xb2, 0x65, 0x39, 0x3d, 0x31, 0xc5, 0x4c, 0x4b, 0x24, 0xae, 0xa1,
	0x09, 0x4c, 0x0b, 0xcd, 0x3b, 0xa0, 0xea, 0xbd, 0x47, 0xf5, 0x6f, 0x94, 0x1f, 0xa5, 0x9d, 0x97,
	0xd2, 0xce, 0x6f, 0xd2, 0xce, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x81, 0x41, 0x54, 0xde, 0xe1,
	0x09, 0x00, 0x00,
}
